# This file contains pin mappings for the Anycubic i3 Mega with
# Ultrabase from 2017. (This config may work on an Anycubic i3 Mega v1
# prior to the Ultrabase if you comment out the definition of the
# endstop_pin in the stepper_z1 section.) To use this config, the
# firmware should be compiled for the AVR atmega2560.

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
step_distance: .0125
endstop_pin: ^!ar3
position_min: 0
position_endstop: 0
position_max: 210
homing_speed: 30.0

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
step_distance: .0125
endstop_pin: ^!ar42
position_endstop: 0
position_max: 215
homing_speed: 30.0

[stepper_z]
step_pin: ar46
dir_pin: ar48
enable_pin: !ar62
step_distance: .0025
endstop_pin: ^!ar18
position_endstop: 0.0
position_min: -2
position_max: 205
homing_speed: 5.0

[stepper_z1]
step_pin: ar36
dir_pin: ar34
enable_pin: !ar30
step_distance: .0025
endstop_pin: ^!ar43

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
step_distance: .002410
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog13
control = pid
pid_kp = 19.182
pid_ki = 0.703
pid_kd = 130.916
min_temp: 0
max_temp: 250
pressure_advance: 0.52
max_extrude_only_distance: 120
max_extrude_only_velocity:80
max_extrude_only_accel: 8000


[heater_fan extruder_fan]
pin: ar44

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control = pid
pid_kp = 73.388
pid_ki = 1.625
pid_kd = 828.366
min_temp: 0
max_temp: 110

[verify_heater heater_bed]
check_gain_time: 100
max_error: 140

[verify_heater extruder]
check_gain_time: 40
max_error: 140
[fan]
pin: ar9


[mcu]
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 150 
max_accel: 1600
square_corner_velocity: 5.0
max_z_velocity: 10
max_z_accel: 60

[controller_fan mcu_fan]
#[heater_fan stepstick_fan]
pin: ar7
idle_timeout: 300
max_power: 1.0

[input_shaper]
#old
#shaper_freq_x: 48
#shaper_freq_y: 61.5
shaper_freq_x: 0
shaper_freq_y: 0
shaper_type: ei

[bed_mesh]
speed: 120
horizontal_move_z: 1
mesh_min: 10,10
mesh_max: 205, 210
probe_count: 3,3

# A virtual sdcard may be useful if the host machine is not fast
# enough to run OctoPrint well. It allows the Klipper host software to
# directly print gcode files stored in a directory on the host using
# standard sdcard G-Code commands (eg, M24).
[virtual_sdcard]
path: ~/sdcard/
#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported). One may point this to OctoPrint's upload
#   directory (generally ~/.octoprint/uploads/ ). This parameter must
#   be provided.


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.020000, 0.050000, -0.050000
#*# 	  0.020000, -0.080000, 0.080000
#*# 	  -0.050000, 0.070000, 0.000000
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 3
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 205.0
#*#
#*# [bed_mesh KALT]
#*# version = 1
#*# points =
#*# 	0.100000, 0.080000, 0.070000
#*# 	0.080000, 0.100000, 0.100000
#*# 	0.070000, 0.100000, 0.080000
#*# tension = 0.2
#*# mesh_x_pps = 2
#*# algo = lagrange
#*# min_x = 15.0
#*# min_y = 15.0
#*# y_count = 3
#*# mesh_y_pps = 2
#*# x_count = 3
#*# max_x = 195.0
#*# max_y = 205.0
#*#
#*# [bed_mesh 230-100]
#*# version = 1
#*# points =
#*# 	0.020000, 0.020000, 0.020000
#*# 	0.040000, 0.000000, 0.100000
#*# 	0.040000, 0.090000, 0.040000
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 3
#*# max_y = 205.0
#*# mesh_x_pps = 2
#*# max_x = 195.0
